% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bq-perform.R
\name{perform}
\alias{perform}
\alias{perform}
\alias{bq_perform_extract}
\alias{perform}
\alias{bq_perform_upload}
\alias{bq_perform_query}
\alias{bq_perform_copy}
\title{Perform jobs}
\usage{
bq_perform_extract(x, destination_uris, compression = "NONE",
  destination_format = "NEWLINE_DELIMITED_JSON", ..., print_header = TRUE,
  billing = x$project)

bq_perform_upload(x, values, create_disposition = "CREATE_IF_NEEDED",
  write_disposition = "WRITE_APPEND", ..., billing = x$project)

bq_perform_query(query, billing, ..., destination_table = NULL,
  default_dataset = NULL, create_disposition = "CREATE_IF_NEEDED",
  write_disposition = "WRITE_EMPTY", use_legacy_sql = FALSE)

bq_perform_copy(src, dest, create_disposition = "CREATE_IF_NEEDED",
  write_disposition = "WRITE_EMPTY", ..., billing = NULL, quiet = NA)
}
\arguments{
\item{destination_table}{A \link{bq_table} where results should be stored.
If not supplied, results will be saved to a temporary table that lives
in a special dataset. You must supply this parameter for large
queries (> 128 MB compressed).}
}
\value{
A \link{bq_job}.
}
\description{
These functions are low-level functions designed to be used by experts.
Each of these low-level functions is paired with a high-level function that
you should use instead:
\itemize{
\item \code{bq_perform_copy()}:    \code{\link[=bq_table_copy]{bq_table_copy()}}.
\item \code{bq_perform_extract()}: \code{\link[=bq_table_extract]{bq_table_extract()}}.
\item \code{bq_perform_query()}:   \code{\link[=bq_dataset_query]{bq_dataset_query()}}, \code{\link[=bq_project_query]{bq_project_query()}}.
\item \code{bq_perform_upload()}:  \code{\link[=bq_table_upload]{bq_table_upload()}}.
}
}
\examples{
if (bq_testable()) {
ds <- bq_test_dataset()
bq_mtcars <- bq_table(ds, "mtcars")
job <- bq_perform_upload(bq_mtcars, mtcars)
bq_table_exists(bq_mtcars)

bq_job_wait(job)
bq_table_exists(bq_mtcars)
head(bq_table_download(bq_mtcars))
}
}
\keyword{internal}
