% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/request_generate.R
\name{request_generate}
\alias{request_generate}
\title{Build a request for the Google BigQuery API}
\usage{
request_generate(endpoint = character(), params = list(),
  token = bq_token())
}
\arguments{
\item{endpoint}{Character. Nickname for one of the selected BigQuery v2 API
endpoints built into bigrquery. Learn more in \code{\link[=bq_endpoints]{bq_endpoints()}}.}

\item{params}{Named list. Parameters destined for endpoint URL substitution,
the query, or the body.}

\item{token}{A suitably prepared OAuth2 token.}
}
\value{
\code{list()}\cr Components are \code{method}, \code{path}, \code{query}, \code{body},
\code{token}, and \code{url}, suitable as input for \code{\link[=request_make]{request_make()}}.
}
\description{
Build a request, using knowledge of the \href{https://cloud.google.com/bigquery/docs/reference/rest/v2/}{BigQuery v2 API} from its
\href{https://www.googleapis.com/discovery/v1/apis/drive/v3/rest}{Discovery Document}. Most
users should, instead, use higher-level wrappers that facilitate common
tasks, such as EXCITING_TASK_X or USEFUL_TASK_Y. The functions here are
intended for internal use and for programming around the BigQuery API.

\code{request_generate()} lets you provide the bare minimum of input.
It takes a nickname for an endpoint and:
\itemize{
\item Uses the API spec to look up the \code{path}, \code{method}, and base URL.
\item Checks \code{params} for validity and completeness with respect to the
endpoint. Separates parameters into those destined for the body, the query,
and URL endpoint substitution (which is also enacted).
}
}
\examples{
\dontrun{
## FIXME: make this a BigQuery example
req <- request_generate(
  "drive.files.get",
  list(fileId = "abc"),
  token = drive_token()
)
req
}
}
\seealso{
\code{\link[gargle:request_develop]{gargle::request_develop()}}, \code{\link[gargle:request_build]{gargle::request_build()}}

Other low-level API functions: \code{\link{bq_token}}
}
\concept{low-level API functions}
